// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// CreateTask implements createTask operation.
	//
	// Create Task.
	//
	// POST /tasks
	CreateTask(ctx context.Context, req OptNewTaskForm) (CreateTaskRes, error)
	// GetCurrentUser implements getCurrentUser operation.
	//
	// Get current user info.
	//
	// GET /auth/user
	GetCurrentUser(ctx context.Context) (GetCurrentUserRes, error)
	// GetTask implements getTask operation.
	//
	// Get Task.
	//
	// GET /tasks/{id}
	GetTask(ctx context.Context, params GetTaskParams) (GetTaskRes, error)
	// GetTaskDependencies implements getTaskDependencies operation.
	//
	// Get dependencies.
	//
	// GET /tasks/{id}/dependencies
	GetTaskDependencies(ctx context.Context, params GetTaskDependenciesParams) (GetTaskDependenciesRes, error)
	// GetTasksParents implements getTasksParents operation.
	//
	// Get parent tasks.
	//
	// GET /tasks/{id}/parents
	GetTasksParents(ctx context.Context, params GetTasksParentsParams) (GetTasksParentsRes, error)
	// GetTasksParentsTree implements getTasksParentsTree operation.
	//
	// Get parent tasks tree.
	//
	// GET /tasks/{id}/parents-tree
	GetTasksParentsTree(ctx context.Context, params GetTasksParentsTreeParams) (GetTasksParentsTreeRes, error)
	// GetTodo implements getTodo operation.
	//
	// Get next task to do.
	//
	// GET /tasks/{id}/todo
	GetTodo(ctx context.Context, params GetTodoParams) (GetTodoRes, error)
	// LinkTask implements linkTask operation.
	//
	// Make task with id dependant of another one.
	//
	// POST /tasks/{id}/dependencies
	LinkTask(ctx context.Context, req OptDependencyForm, params LinkTaskParams) (LinkTaskRes, error)
	// LogOut implements logOut operation.
	//
	// Log out.
	//
	// DELETE /auth/session
	LogOut(ctx context.Context) (LogOutOK, error)
	// SearchTask implements searchTask operation.
	//
	// Search task.
	//
	// GET /tasks/search
	SearchTask(ctx context.Context, params SearchTaskParams) (SearchTaskRes, error)
	// SetTaskDone implements setTaskDone operation.
	//
	// Set Task Done.
	//
	// PUT /tasks/{id}/done
	SetTaskDone(ctx context.Context, params SetTaskDoneParams) (SetTaskDoneRes, error)
	// SetTaskNotDone implements setTaskNotDone operation.
	//
	// Set Task not done.
	//
	// DELETE /tasks/{id}/done
	SetTaskNotDone(ctx context.Context, params SetTaskNotDoneParams) (SetTaskNotDoneRes, error)
	// SignIn implements signIn operation.
	//
	// POST /auth/session
	SignIn(ctx context.Context, req OptSignInForm) (SignInRes, error)
	// SignUp implements signUp operation.
	//
	// Sign up user.
	//
	// POST /auth/user
	SignUp(ctx context.Context, req OptSignUpForm) (SignUpOK, error)
	// UnlinkTask implements unlinkTask operation.
	//
	// Unlink task.
	//
	// DELETE /tasks/{id}/dependencies/{depends_on_id}
	UnlinkTask(ctx context.Context, params UnlinkTaskParams) (UnlinkTaskRes, error)
	// UpdateTask implements updateTask operation.
	//
	// Update Task.
	//
	// PUT /tasks/{id}
	UpdateTask(ctx context.Context, req OptTaskUpdateForm, params UpdateTaskParams) (UpdateTaskRes, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
